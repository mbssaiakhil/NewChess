/*
 * Stub for class engine.SimpleEngine
 * Generated by Sapphire Compiler (sc).
 */
package engine.stubs;


public final class SimpleEngine_Stub extends engine.SimpleEngine implements sapphire.common.AppObjectStub {

    sapphire.policy.SapphirePolicy.SapphireClientPolicy $__client = null;
    boolean $__directInvocation = false;

    public SimpleEngine_Stub () {
        super();
    }


    public void $__initialize(sapphire.policy.SapphirePolicy.SapphireClientPolicy client) {
        $__client = client;
    }

    public void $__initialize(boolean directInvocation) {
        $__directInvocation = directInvocation;
    }

    public Object $__clone() throws CloneNotSupportedException {
        return super.clone();
    }



    // Implementation of reset()
    public void reset() {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                super.reset();
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public synchronized void engine.SimpleEngine.reset()";
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    // Implementation of parseMove(String)
    public short parseMove(java.lang.String $param_String_1) {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                $__result = super.parseMove( $param_String_1);
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public synchronized short engine.SimpleEngine.parseMove(java.lang.String)";
                $__params.add($param_String_1);
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        return ((java.lang.Short) $__result).shortValue();
    }

    // Implementation of migrateObject()
    public void migrateObject()
            throws java.lang.Exception {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                super.migrateObject();
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public void engine.SimpleEngine.migrateObject() throws java.lang.Exception";
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    // Implementation of makeMove(String)
    public java.lang.String makeMove(java.lang.String $param_String_1) {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                $__result = super.makeMove( $param_String_1);
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public synchronized java.lang.String engine.SimpleEngine.makeMove(java.lang.String)";
                $__params.add($param_String_1);
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        return ((java.lang.String) $__result);
    }

    // Implementation of lastMove()
    public java.lang.String lastMove() {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                $__result = super.lastMove();
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public synchronized java.lang.String engine.SimpleEngine.lastMove()";
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        return ((java.lang.String) $__result);
    }

    // Implementation of isWhiteTurn()
    public boolean isWhiteTurn() {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                $__result = super.isWhiteTurn();
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public synchronized boolean engine.SimpleEngine.isWhiteTurn()";
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        return ((java.lang.Boolean) $__result).booleanValue();
    }

    // Implementation of isMate()
    public boolean isMate() {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                $__result = super.isMate();
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public synchronized boolean engine.SimpleEngine.isMate()";
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        return ((java.lang.Boolean) $__result).booleanValue();
    }

    // Implementation of isDraw()
    public boolean isDraw() {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                $__result = super.isDraw();
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public synchronized boolean engine.SimpleEngine.isDraw()";
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        return ((java.lang.Boolean) $__result).booleanValue();
    }

    // Implementation of isCheck()
    public boolean isCheck() {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                $__result = super.isCheck();
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public boolean engine.SimpleEngine.isCheck()";
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        return ((java.lang.Boolean) $__result).booleanValue();
    }

    // Implementation of go()
    public java.lang.String go() {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                $__result = super.go();
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public synchronized java.lang.String engine.SimpleEngine.go()";
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        return ((java.lang.String) $__result);
    }

    // Implementation of getBoard(int)
    public char[][] getBoard(int $param_int_1) {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                $__result = super.getBoard( $param_int_1);
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public synchronized char[][] engine.SimpleEngine.getBoard(int)";
                $__params.add($param_int_1);
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        return ((char[][]) $__result);
    }

    // Implementation of getBoard(char[][])
    public int[] getBoard(char[][] $param_arrayOf_arrayOf_char_1) {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                $__result = super.getBoard( $param_arrayOf_arrayOf_char_1);
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public int[] engine.SimpleEngine.getBoard(char[][])";
                $__params.add($param_arrayOf_arrayOf_char_1);
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        return ((int[]) $__result);
    }

    // Implementation of getAllMoves()
    public java.lang.String[] getAllMoves() {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                $__result = super.getAllMoves();
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public java.lang.String[] engine.SimpleEngine.getAllMoves()";
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        return ((java.lang.String[]) $__result);
    }

    // Implementation of currentPly()
    public int currentPly() {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                $__result = super.currentPly();
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public int engine.SimpleEngine.currentPly()";
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        return ((java.lang.Integer) $__result).intValue();
    }
}
